Recursion:
1. Recursion is when a function calls itself multiple number of times until it 
    reaches it's base case, then it returns until it reaches the beginning of the 
    function call stack

2. The base case is necessary, because it tells the function when to stop calling itself.

Graphs:
1. Graphs are made of nodes and edges that link the nodes together based on relationships
 that are either directed or undirected.

2. Trees are a more restricted version of graphs and have a parent and child relationship 
    and that relationship is acyclic. Graphs are uni-directional and can be cyclic or acyclic.

3. My project of a seating chart would be a good example. You have nodes of people who have 
    relationships with other people with which they want to sit with.

Performance of Different Data Structures:
1. Python List (Array): 
    Add-L: O(n), Pop-L: O(n), O(1)

2. Linked List:
    Index: O(n), Search: O(n), Add-R: O(1), Add-L: O(1), Pop-L: O(1), Pop-R: O(n)

3. Doubly-Linked List:
    Index: O(n), Search: O(n), Add-R: O(1), Add-L: O(1), Pop-L: O(1), Pop-R: O(1)

4. Queue (as Array):
    Add-R: O(1), Pop-L: O(n),

5. Queue (as LL or DLL): 
    Add-R: O(1), Pop-L:O(1)

6. Stack (as Array, LL, or DLL):
    Add-R: O(1), Pop-R: O(1)

7. Deque(as DLL):
    Add-R: O(1), Add-L: O(1), Pop-L: O(1), Pop-R: O(1)

8. Set(Hash Map):
    Get: O(1), Add: O(1), Delete: O(1), Iterate: O(n), Memory: medium

9. Binary Search Tree:
    Get: O(log n), Add: O(log n), Delete: O(log n), Iterate: O(n), Memory: a little

10. Tree:
    Get: O(n), Add: O(1), Delete: O(1), Iterate: O(n), Memory: a little

Sorting:
1. Bubble sort goes through every item in the list and compares each pair of adjacent items and swaps them
    if they are in the wrong order. This process is repeated multiple times until the list
    is sorted.
2. Merge sort iterates through the list of items and divides them in half into the list is made
    up of one item. You merge those items of the smaller list to build a bigger list by comparing
    the first element of each list.
3. Quick sort iterates through the list and choose a pivot to compare the items to each time.




